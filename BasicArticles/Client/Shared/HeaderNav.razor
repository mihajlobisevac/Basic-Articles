@inject NavigationManager Navigation
@inject ICategoryViewModel CategoryViewModel

@if (Categories != null || Categories.Count() > 0)
{
    <AuthorizeView>
        <Authorized>
            <div class="manage">
                <a href="manage">Manage</a>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="manage">
                <a href="authentication/login">Login</a>
            </div>
        </NotAuthorized>
    </AuthorizeView>

    <header>
        <div class="header-wrapper">
            <div class="header-title noselect">Basic Articles</div>
        </div>
    </header>

    <nav>
        <div class="main-nav noselect">

            <NavLink href="">home</NavLink>

            @for (int i = 0; i < Categories.Count; i++)
            {
                if (Categories[i] != null)
                {
                    string navRoute = $"category/{Categories[i].Name}";
                    string navName = Categories[i].Name.ToLower();
                    if (i < 3)
                    {
                        <NavLink href="@navRoute">@navName</NavLink>
                    }
                    if (i >= 3 && i < 5)
                    {
                        <NavLink href="@navRoute" class="show-desktop">@navName</NavLink>
                    }
                }
            }

            <div class="more-dropdown">
                <div class="more-dropbtn" onclick="moreDropdown()">more</div>
                <div class="dropdown-content" id="moreItems">

                    @for (int i = 3; i < Categories.Count; i++)
                    {
                        if (Categories[i] != null)
                        {
                            string navRoute = $"category/{Categories[i].Name}";
                            string navName = Categories[i].Name.ToLower();
                            if (i >= 3 && i < 5)
                            {
                                <NavLink href="@navRoute" class="show-mobile">@navName</NavLink>
                            }
                            if (i >= 5)
                            {
                                <NavLink href="@navRoute">@navName</NavLink>
                            }
                        }
                    }
                </div>
            </div>

        </div>
    </nav>
}

@code{
    public List<CategoryModel> Categories { get; set; } = new List<CategoryModel>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await CategoryViewModel.GetCategoryList();
    }
}
